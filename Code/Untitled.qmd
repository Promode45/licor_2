---
title: "corr_plots"
format: html
editor: visual
---

```{r}
#install.packages("corrplot")
#install.packages("psych")
library(corrplot)
library(psych)
corr_data <- resp_final[,12:14]
m = cor(corr_data)
corPlot(corr_data)

```

```{r}
event4 |> 
  ggplot(aes(x=swc,y=ts))+
  geom_point(aes(color = flux))+
  scale_fill_gradient(low = "white", high = "red")+
  theme_minimal()+
  coord_cartesian(expand = T)
```

```{r}
#install.packages("akima")
require(akima)
resolution <- 0.05
a <- interp(x = resp_final$swc,y = resp_final$ts, z= resp_final$flux,
            xo=seq(min(resp_final$swc),max(resp_final$swc),by=resolution), 
            yo=seq(min(resp_final$ts),max(resp_final$ts),by=resolution))
image(a, xlab = "Moisture content", ylab = "Soil Temperature")
res <- a$z |> 
  magrittr::set_colnames(a$y)|>  
  as_tibble() |> 
  mutate(x=a$x)|> 
  gather(y, z, -x, convert=TRUE)

res |> 
  ggplot(aes(x=x, y=y)) +
  geom_tile(aes(fill=z))+
  scale_fill_viridis_c(option = "plasma", name = "Flux")+
  theme(panel.background = element_blank(),
        plot.background = element_blank())+
  theme_classic(base_size = 14)+
  labs(x = "Soil Water Content",
       y = "Soil Temperature",
       fill = "FLux Flux (μmol/m2-s)",
       title ="Heat map")
ggsave(filename = "heatmap.jpg",
       width = 270, # 14.1 x 5.05 in 358 x 256 mm 
       height = 195,# 
       units = "mm",
       dpi = 200,
       device = "bmp" 
 )
  
```

```{r}
combined_withcar |> 
  ggplot(aes(swc,flux))+
  geom_point()+
  geom_smooth(aes(color = treatment))
```

```{r}
interaction.plot(x.factor =  resp_final$ts,
                 trace.factor = resp_final$treatment,
                 response = resp_final$flux)
```

```{r}
library(tidyverse)
library(readxl)
data <- read_xlsx("/Users/pramodhegde/Documents/DSA/licor_2/Data/resp_finalized.xlsx") |> 
  mutate(ts = as.numeric(ts))
data

corr_data <- bind_cols(data[,17:21],data[,5], data[,11:12], data[,15])
m = cor(corr_data, use = "complete.obs")
corPlot(m)

ggexport(m,"corrplot.jpg", height = 8, width = 10)
```

```{r}
data$date_time <- factor(format(data$date_time,format = "%y-%m-%d")) 
  
p1 <- data |> 
  #filter(year == 2024) |> 
  dplyr::select(date_time, label, swc, treatment, flux) |>
  # arrange(date_time) |> 
  group_by(date_time, treatment) |> 
  summarise(mean_fco2= mean(flux, na.rm = T)) |> 
  ggplot(aes(date_time,mean_fco2, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2))+
  theme_minimal() +
  scale_x_discrete(breaks = c("23-06-06","23-06-16","23-07-06","23-08-15","23-09-25","24-01-29","24-02-05","24-03-25","24-04-01","24-07-31" ))+
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    #axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  )+
  labs(x = "Date (Y-M-D)",
       y = "Mean flux (μmol/m2-s)")+
  scale_color_viridis_d()
```

```{r}
p2 <- data |> 
  #filter(year == 2024) |> 
  dplyr::select(date_time, label, swc, treatment, flux, wfps) |>
  group_by(date_time, treatment) |> 
  summarise(mean_wfps= mean(wfps, na.rm = T)) |> 
  ggplot(aes(date_time,mean_wfps, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2))+
  theme_minimal() +
  scale_x_discrete(breaks = c("23-06-06","23-06-16","23-07-06","23-08-15","23-09-25","24-01-29","24-02-05","24-03-25","24-04-01","24-07-31" ))+
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    #axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  )+
  labs(x = "Date", 
       y = "WFPS")+
  scale_color_viridis_d()
  
```

```{r}
p3 <- data |> 
  #filter(year == 2024) |> 
  dplyr::select(date_time, label, swc, treatment, flux, wfps,ts) |>
  group_by(date_time, treatment) |> 
  summarise(mean_ts= mean(ts, na.rm = T)) |> 
  ggplot(aes(date_time,mean_ts, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2))+
  theme_minimal() +
  theme(
    #axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  )+
  labs(x = "Date (Y-M-D)",
       y = "Soil Temperature (°C)")+
  scale_color_viridis_d()+
 scale_x_discrete(breaks = c("23-06-06","23-06-16","23-07-06","23-08-15","23-09-25","24-01-29","24-02-05","24-03-25","24-04-01","24-07-31" ))
```
```{r}
library(ggpubr)
fig <- ggarrange(p1+rremove("xlab"),p2+rremove("xlab"),p3, 
                 common.legend = T,
                 ncol = 1, nrow = 3,
                 heights = c(1.5,1.3,1.5))
fig

ggsave("../Output/poster_duplicate.jpg", height = 12, width = 10, dpi = 300)
```

```{r}
library(ggplot2)
library(cowplot)


# Clean plots to avoid axis conflicts
p1_clean <- p1 + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = "none")
p2_clean <- p2 + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = "none")
p3_clean <- p3 + theme(legend.position = "none")  # Remove individual legends

# Extract the legend from one of the plots
legend <- get_legend(p1 + theme(legend.position = "bottom"))

# Combine the plots in a vertical grid with the legend
figure <- plot_grid(
  plot_grid(p1_clean, p2_clean, p3_clean, ncol = 1, align = "v", rel_heights = c(1.2, 1.2, 1.5)),
  legend, 
  ncol = 1, 
  rel_heights = c(10, 1)  # Adjust ratio to leave space for the legend
)

# Display the final plot
print(figure)


```

```{r}
library(ggplot2)
library(patchwork)

# Prepare the plots with legend turned off
p1_clean <- p1 + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = "none")
p2_clean <- p2 + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = "none")
p3_clean <- p3 + theme(legend.position = "none")

# Combine the plots with a common legend at the bottom
figure <- (
  p1_clean / 
  p2_clean / 
  p3_clean
) + 
  plot_layout(heights = c(1.2, 1.2, 1.5)) + 
  plot_annotation(tag_levels = "A") & 
  theme(legend.position = "bottom")

# Add the legend back from the first plot
print(figure + theme(legend.position = "bottom"))


```
```{r}
t1 <- data %>% 
  filter(wfps > 0.01) |> 
  filter(ts >= 25) %>% 
  ggplot(aes(wfps, flux))+
  geom_point(aes(color = treatment))+
  geom_smooth(method = lm, aes(color = treatment), se = F) +
  scale_fill_viridis_d()+
  labs(x = "WFPS",
       y = "  ",
       title = "   > 25°C")+
  theme_minimal()+
  theme(axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title.x = element_blank(),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    #axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank())+
  scale_x_continuous(breaks = seq(0.0,0.7,0.2))

t2 <- data %>% 
  filter(ts >= 17.5 & ts <= 23) %>% 
  ggplot(aes(wfps, flux))+
  geom_point(aes(color = treatment))+
  geom_smooth(method = lm, aes(color = treatment), se = F) +
  scale_fill_viridis_d()+
  labs(x = "WFPS",
       y = "Soil respiration in umol/m2/s ",
       title = "17.5 - 23°C")+
  theme_minimal()+
  theme(axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    axis.title.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    #axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank())+
  scale_x_continuous(breaks = seq(0.0,0.7,0.2))

t3 <- data %>% 
  filter(ts < 17.5 ) %>% 
  ggplot(aes(wfps, flux))+
  geom_point(aes(color = treatment))+
  geom_smooth(method = lm, aes(color = treatment), se = F) +
  scale_fill_viridis_d()+
  labs(x = "WFPS",
       y = "   ",
       title = "  <17.5°C")+
  theme_minimal()+
  theme(#axis.text.x = element_blank(),
    #axis.ticks.x = element_blank(),
   legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank())+
  scale_x_continuous(breaks = seq(0.0,0.7,0.2))

```

```{r fig.width= 9, fig.height= 10}
figure <- ggarrange(t1,t2,t3, 
                    common.legend = T, 
                    ncol = 1,
                    nrow = 3,
                    heights = c(1.5,1.5,1.5))
figure

ggsave("../Output/poster_2.jpg", height = 10, width = 9,dpi = 300)
```

```{r}
# Define date breaks
date_breaks <- c("Jun '23", "Jul '23", "Aug '23", 
                 "Sept '23", "Jan '24", "Feb '24", "Mar '23", 
                 "Apr '24", "Jul '24")
date_breaks <- c(6,7,8,9,1,2,3,4,7)

# Modify p1, p2, and p3 with date breaks
p1 <- data |> 
  dplyr::select(date_time, label, swc, treatment, flux) |>
  group_by(date_time, treatment) |> 
  summarise(mean_fco2 = mean(flux, na.rm = TRUE)) |> 
  ggplot(aes(date_time, mean_fco2, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2)) +
  theme_minimal() +
  scale_x_discrete(breaks = date_breaks) +  # Add breaks here
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  ) +
  labs(x = "Date (Y-M-D)", y = "Mean flux (μmol/m2-s)") +
  scale_color_viridis_d()

p2 <- data |> 
  dplyr::select(date_time, label, swc, treatment, flux, wfps) |>
  group_by(date_time, treatment) |> 
  summarise(mean_wfps = mean(wfps, na.rm = TRUE)) |> 
  ggplot(aes(date_time, mean_wfps, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2)) +
  theme_minimal() +
  scale_x_discrete(breaks = date_breaks) +  # Add breaks here
  theme(
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  ) +
  labs(x = "Date", y = "WFPS") +
  scale_color_viridis_d()

p3 <- data |> 
  dplyr::select(date_time, label, swc, treatment, flux, wfps, ts) |>
  group_by(date_time, treatment) |> 
  summarise(mean_ts = mean(ts, na.rm = TRUE)) |> 
  ggplot(aes(date_time, mean_ts, group = treatment, color = treatment)) +
  geom_line(position = position_dodge(0.2)) +
  geom_point(position = position_dodge(0.2)) +
  theme_minimal() +
  scale_x_discrete(breaks = date_breaks) +  # Add breaks here
  theme(
    axis.ticks.x = element_blank(),
    legend.position = "top",
    legend.justification = c("right", "top"),
    legend.margin = margin(6, 6, 6, 6),
    axis.title = element_text(size = 17),
    axis.text = element_text(size = 17),
    legend.text = element_text(size = 17),
    legend.title = element_text(size = 17),
    axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank()
  ) +
  labs(x = "Date (Y-M-D)", y = "Soil Temperature (°C)") +
  scale_color_viridis_d()
 # annotate("segment", x = c(9.3,9.5), xend = c(9.6,9.8), y = c(0, 0), yend = c(40, 40))+
 #  coord_cartesian(clip = "off", ylim = c(0, 40)) 

# Arrange the three plots
fig <- ggarrange(p1 + rremove("xlab"), p2 + rremove("xlab"), p3, 
                 common.legend = TRUE,
                 ncol = 1, nrow = 3,
                 heights = c(1.5, 1.3, 1.5))

fig

```

```{r}


```

