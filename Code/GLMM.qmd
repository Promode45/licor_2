---
title: "glmm"
format: html
editor: visual
---

```{r echo=FALSE}
#|echo: false
library(tidyverse)
library(janitor)
library(readr)
library(rstatix)
#install.packages("FSA")
library(FSA)
#install.packages("rcompanion")
library(rcompanion)
#install.packages("plotly")
library(plotly)
#install.packages("ggpubr")
library(ggpubr)
#install.packages("reshape")
library(reshape)
#install.packages("sciplot")
library(sciplot)
#install.packages("nlme")
library(nlme)
library(lme4)
library(emmeans)
library(broom)
library(multcomp)
library(car)
library(MuMIn)

```

```{r}
#| echo: false
resp_data <- list.files(path = "/Users/pramodhegde/Library/CloudStorage/OneDrive-UniversityofGeorgia/Documents/Licor",
                        pattern = "*.csv",
                        full.names = T) %>% 
  lapply(read.csv, skip =3, header = F) %>% 
  bind_rows 
colnames(resp_data) <- c("co2", "date_time", "label", "swc", "flux", "ts", "ta")
resp_data_w <- resp_data %>% 
  na.omit() |> 
  filter(label != "Test")
```

```{r}
resp_data_w <- resp_data_w %>% 
  clean_names() %>% 
  mutate(date_time = as.POSIXct(date_time, tz = Sys.timezone(), format="%Y/%m/%d %H:%M:%S")) %>% 
  mutate(label = factor(label)) %>% 
  mutate(day = day(date_time)) %>% 
  mutate(month = month(date_time)) %>% 
  mutate(treatment = case_when( label %in% c(1,8,12,20,23) ~ "Disturbance",
                                label %in% c(3,10,14,17,24,2,9,11,19,25) ~ "NPK",
                                label %in% c(4,7,15,16,22) ~ "Control", 
                                label %in% c(5,6,13,18,21) ~ "NPK+Disturbance",
                                .default = "Outside_treatments"
    )) |> 
  mutate( drying_cycle = case_when( day ==29 & month == 01 ~ "1",
                                    day == 30 & month == 01 ~"1" ,
                                    day == 31 & month == 01 ~ "1", 
                                    day == 05 ~ "2", 
                                    day == 06 ~ "2", 
                                    day == 07 ~ "2",
                                    day == 27 & month == 03 ~ "3",
                                    day== 28 & month == 03 ~ "3",
                                    day == 29 & month == 03 ~ "3",
                                    day == 01 & month == 04 ~ "3", 
                                    month == 7 ~ "4", 
                                    month == 8 ~ "4",
                                    .default = "0"
                                    
    
    
    
  )) |> 
  mutate(dar = case_when(
    day ==29 & month == 01 ~ "1",
    day == 30 & month == 01 ~"2" ,
    day == 31 & month == 01 ~ "3",
    day == 05 ~ "1",
    day == 06 ~ "2",
    day == 07 ~ "3",
    day == 27 & month == 03 ~ "1",
     day== 28 & month == 03 ~ "2",
    day == 29 & month == 03 ~ "3",
    day == 01 & month == 04 ~ "6",
    day == 30 & month == 07 ~ "1",
     day == 31 & month == 07 ~ "2",
    day == 01 & month == 08 ~ "3",
    day == 02 & month == 08 ~ "4",
    .default = "0"
    
    
  )
           
           ) |> 
   mutate(
    rep = case_when
    (label %in% c(1:5) ~ "1",
    label %in%  c(6:10) ~ "2",
      label %in%  c(11:15) ~ "3",
      label %in%  c(16:20) ~ "4", 
      label %in%  c(21:25) ~ "5",
      .default = "None"
     )
  ) |> 
  mutate(fdar = factor(dar),
         treatment = factor(treatment),
         label = factor(label),
         rep = factor(rep)) |> 
  filter(!treatment == "Outside_treatments") |> 
  mutate(time = yday(date_time) - 28) |> 
  mutate(time_of_day = if_else(am(date_time),"am","pm")) |> 
  mutate(ftime = factor(time)) |> 
  filter(!swc < 0.01)


```

```{r}
resp_final <-
  resp_data_w |> 
  summarise(flux = mean(flux),
            swc = mean(swc),
            ts = mean(ts),
            ta = mean(ta),
            date_time = mean(date_time),
            .by = c("label","day","month","time_of_day","treatment","drying_cycle","ftime","time","rep","dar","fdar")) |> 
    ungroup() 

resp_final_pm <- resp_final |> 
  filter(!drying_cycle == 3 | !drying_cycle ==4 & !time_of_day == "pm")
```

```{r}
event_4_removed <- resp_final |> 
  filter(!drying_cycle == 4)
#devtools::install_github("dustinfife/flexplot")
require(flexplot)
baseline <- lmer(flux~1 + (1|label), data = resp_final)
summary(baseline)
one_variable_fixed <- lmer(flux~ 1+treatment+(1|label),data = resp_final)
summary(one_variable_fixed)
two_variable_fixed <- lmer(flux ~ treatment+swc + (1|label), data = resp_final)
summary(two_variable_fixed)
two_variable_random <- lmer(flux~treatment+swc+(1+swc|label), data = resp_final)
summary(two_variable_random)

visualize(two_variable_random,
          formula = flux~ treatment, sample = 25)
compare.fits(flux ~ swc | treatment + label,
             data = resp_final,
             model1 = two_variable_fixed,
             model2 = two_variable_random,
             re = T, 
             clusters = 5)
visualize(two_variable_fixed, plot = "residuals")
```

```{r}
three_variable_fixed <- lmer(flux ~ treatment+swc+ts + (1|label)+(1|ftime), data = resp_final_pm)
Anova(three_variable_fixed,type = 3)
three_variable_fixed_inter <- lmer(flux ~ treatment*swc*ts + (1|label), data = resp_final)
summary(three_variable_fixed_inter)
Anova(three_variable_fixed_inter, type = 3)
three_variable_random <- lmer(flux~treatment+swc+ts+(1+ts+swc|label), data = resp_final)
summary(three_variable_random)
three_variable_4removed <- lmer(flux~treatment+swc+ts+(1+swc+ts|label), data = event_4_removed)
summary(three_variable_4removed)

test_model <- lmer(flux~treatment*swc*ts+(1|label)+(1|ftime), data = resp_final_pm)
summary(test_model)
visualize(test_model,
          formula = flux ~ swc|ftime,
          sample = 15)
model.comparison(three_variable_fixed, test_model)
```

three variable fixed seems to be doing the best!!

```{r}
Anova(three_variable_fixed, type = 3)
glmm <- visualize(three_variable_fixed,
          formula = flux~treatment|swc+ts,
          sample = 25,
          plot = "model",
          xlab("Soil temperature"))
glmm_final <- glmm +
  theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
#ggsave(filename = "glmm.jpg",
       plot = glmm_final,
       width = 270, # 14.1 x 5.05 in 358 x 256 mm 
       height = 195,# 
       units = "mm",
       dpi = 200,
       device = "bmp"
)
summary(three_variable_fixed)
estimates(three_variable_fixed)
Anova(three_variable_fixed,type = 3)
```


Season-wise GLMM
```{r}
dormant <- resp_final_pm |> 
  filter(drying_cycle == 1 | drying_cycle == 2 ) 
growing <- resp_final_pm |> 
  filter( drying_cycle == 3 |drying_cycle == 4) 
```

```{r fig.width= 8, fig.height= 5}
three_variable_fixed_dormant <- lmer(flux ~ treatment+swc+ts+treatment*swc + (1|label)+(1|ftime), data = dormant)
flexplot(flux ~ treatment|ts+swc, data = dormant,
         labels = list(ts = c("low","medium", "high"),
                       swc = c("low","medium", "high")
                       ),
         sample = 150
         )
glmm_dormant <- visualize(three_variable_fixed_dormant,
          formula = flux~ treatment | swc+ts,
          sample = 25,
          plot = "model",
          jitter = 0.2,
          spread = "stdev",
          labels = list(ts = c("low","medium", "high"),
                       swc = c("low","medium", "high")
          )
          
          )
Anova(three_variable_fixed_dormant, type = 3)
emm <- emmeans(three_variable_fixed_dormant, ~treatment) |> 
  cld(reversed = T,
      Letters = letters,
      adjust = "none") |> 
  as.data.frame() |> 
  mutate(letter = trimws(.group)) 
glmm_dormant_final <- glmm_dormant +
  theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))

dormant |> 
  ggplot(aes(treatment,flux))+
  geom_boxplot(aes(color = treatment))+
  geom_label(data = emm,
             aes(x = treatment,y = emmean, label = letter),
             size = 6)+
  scale_fill_viridis_d()+
  labs(x = "Treatment",
       y = "Flux (μmol/m2-s)")+
  theme(legend.text = element_text(size = 15),
        legend.title = element_text(size = 15),
        axis.text = element_text(size = 15),
        axis.title = element_text(size = 15),
        panel.grid.minor = element_blank(),
        legend.position = "none")
  

```

```{r}
three_variable_fixed_growing <- lmer(flux ~ treatment+swc+ts + (1|label)+(1|ftime), data = growing)
Anova(three_variable_fixed_growing,type = 3)

custom_labels <- c("swc"="Soil Water Content",
                   "ts" = "Soil temperature",
                   "treatment" = "Treatments")
swc_labels <- c("low","medium","high")
ts_labels <- c("7.4-20.4" = "Low Temp",
  "20.4-28.7" = "Medium Temp",
  "28.7-39.8" = "High Temp")
glmm_growing <- visualize(three_variable_fixed_growing,
          formula = flux~treatment|swc+ts,
          sample = 25,
          plot = "model")
glmm_growing_final <- glmm_growing+
  theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
        axis.title = element_text(size = 10),
  axis.text = element_text(size = 8),
  strip.text = element_text(size = 10),  # Facet label text
  legend.text = element_text(size = 8),
  legend.title = element_text(size = 12))+
  labs(x = "Treatment",
       y = "Flux (μmol/m2-s)",
       facet = "Soil Water Content",
       facet_row = "Soil Temperature")
#ggsave(filename = "glmm_growing.jpg",
       plot = glmm_growing_final,
       width = 270, # 14.1 x 5.05 in 358 x 256 mm 
       height = 195,# 
       units = "mm",
       dpi = 200,
       device = "bmp"
)

Anova(three_variable_fixed_growing, type = 3)
```

```{r}
library(lmerTest)
struc <- readxl::read_xlsx("../Data/resp_finalized.xlsx") 

struc_w <- struc |> 
  mutate(flux_mgco2 = (flux*44.01)/10^3,
    flux_mgco2_kgc = flux_mgco2/c_stock_kgC_m2,
    ts = as.double(ts),
    treatment = as.factor(treatment))

struc_lmm <- lmer(flux_mgco2_kgc ~ treatment+ts+wfps+micro+macro + (1|label), data = struc_w)
coef(struc_lmm)
fixef(struc_lmm)
ranef(struc_lmm)
VarCorr(struc_lmm)
visualize(struc_lmm,
          formula = flux_mgco2_kgc ~ wfps|macro)
anova <- Anova(struc_lmm, type = 3) |> 
  as.data.frame()

struc_w |> 
  filter(wfps > 0.70)
```

```{r}
library(flexplot)
struc_lmm2 <- lmer(flux_mgco2_kgc ~ treatment+ts+wfps+micro+macro+ts:wfps + (1|label), data = struc_w)
Anova(struc_lmm2, type = 3)
visualize(struc_lmm2, plot = "residuals")
```

```{r}
struc_lmm3 <- lmer(flux_mgco2_kgc ~ treatment+ts+wfps+micro+macro+wfps:micro+wfps:macro+ts:wfps + (1|label), data = struc_w)
Anova(struc_lmm3,type = 3)
visualize(struc_lmm3, plot = "residuals")
```
```{r}
 lmer(flux_mgco2_kgc ~ treatment+ts+wfps+micro+macro+ts*micro+ts*macro + (1|label), data = struc_w)
```

```{r}
struc_scaled <- transform(struc_w,
                          ts_sc = scale(ts),
                          swc_sc = scale(ts),
                          wfps_sc = scale(wfps),
                          micro_sc = scale(micro), 
                          macro_sc = scale(macro),
                          root_density_sc = scale(root_density)
                          )
```

```{r}
struc_lmm4 <- lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+micro_sc+macro_sc + (1|label), data = struc_scaled)
visualize(struc_lmm4, plot = "residuals")
Anova(struc_lmm4, type = 3)
vif(struc_lmm4)
```

```{r}
struc_lmm5 <- lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+micro_sc+macro_sc+ts_sc*wfps_sc + (1|label), data = struc_scaled)
visualize(struc_lmm5, plot = "residuals")
Anova(struc_lmm5, type = 3)
vif(struc_lmm5)
```

```{r}
struc_lmm6 <- lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+micro_sc+macro_sc+wfps_sc*micro_sc+wfps_sc*macro_sc + (1|label), data = struc_scaled)
Anova(struc_lmm6, type = 3)
visualize(struc_lmm6, plot = "residuals")
vif(struc_lmm6)
```

```{r}
struc_lmm7 <- lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+micro_sc+macro_sc+ts_sc*micro_sc+ts_sc*macro_sc + (1|label), data = struc_scaled)
Anova(struc_lmm7, type = 3)
visualize(struc_lmm7, plot = "residuals")
vif(struc_lmm7)
```
```{r}
anova(struc_lmm7, struc_lmm6,struc_lmm5,struc_lmm4)
```


```{r}
struc_lmmx <- lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+micro_sc+macro_sc+ts_sc*micro_sc+ts_sc*macro_sc+wfps_sc:micro_sc+wfps_sc:macro_sc+ts_sc:wfps_sc+micro_sc:macro_sc + (1|label), data = struc_scaled)
Anova(struc_lmmx, type = 3)
vif(struc_lmmx)

```

```{r}
temp_cat <- struc_scaled |> 
  mutate(temp = case_when(
    7.433 < ts & ts < 17.942 ~ "low",
    17.942 < ts & ts < 31.20 ~ "medium",
    ts >= 31.20 ~ "high"
  ),
  moisture = case_when(
    swc <= 0.22 ~ "low",
    swc > 0.22 ~ "high"
  ))
temp_cat |> 
  filter(moisture == "medium")

```

```{r}
struc_lmm8 <- lmer(flux_mgco2_kgc ~ treatment+temp+moisture+wfps_sc+micro_sc+macro_sc + (1|label), data = temp_cat)
Anova(struc_lmm8, type =3)
visualize(struc_lmm8, formula = flux_mgco2_kgc ~ temp)
vif(struc_lmm8)
```

```{r}
struc_lmm9 <-  lmer(flux_mgco2_kgc ~ treatment+temp+moisture+wfps_sc+micro_sc+macro_sc+temp:moisture + (1|label), data = temp_cat)
Anova(struc_lmm9, type = 3)
visualize(struc_lmm9, formula = flux_mgco2_kgc ~ temp|moisture)
```

```{r}
struc_lmm10 <- lmer(flux_mgco2_kgc ~ treatment + temp + moisture+wfps_sc + micro_sc + macro_sc + wfps_sc:micro_sc + (1|label), data = temp_cat)
Anova(struc_lmm10, type = 3)
visualize(struc_lmm10, formula = flux_mgco2_kgc ~ temp|moisture)
```

```{r}
struc_lmm11 <- lmer(flux_mgco2_kgc ~ treatment+temp+wfps_sc+ root_density_sc+micro_sc+macro_sc+temp:micro_sc+temp*macro_sc+wfps_sc:micro_sc+wfps_sc:macro_sc+temp:wfps_sc+micro_sc:macro_sc+root_density_sc*temp+root_density_sc:wfps_sc+root_density_sc:micro_sc+root_density_sc:macro_sc + (1|label), data = temp_cat)
Anova(struc_lmm11, type = 3)
visualize(struc_lmm11, plot = "residuals")
vif(struc_lmm11)
```

```{r}
struc_lmm12 <- lmer(flux_mgco2_kgc ~ treatment + temp*wfps_sc + temp*micro_sc + wfps_sc*micro_sc+root_density_sc*micro_sc + macro_sc+ (1|label), data = temp_cat)
Anova(struc_lmm12, type = 3)
car::vif(struc_lmm12)
```
```{r}
library(interactions)

# Create an interaction plot for temp * wfps_sc
interact_plot(struc_lmm12, pred = temp, modx = wfps_sc, 
              interval = TRUE, plot.points = TRUE) +
  theme_classic()
```

```{r}
anova(struc_lmm10, struc_lmm8,struc_lmm9,struc_lmm11,struc_lmm12, struc_lmm13)
```

```{r}
struc_lmm13 <-  lmer(flux_mgco2_kgc ~ treatment+ts_sc+wfps_sc+root_density_sc+micro_sc+macro_sc+ts_sc:wfps_sc + (1|label), data = temp_cat)
Anova(struc_lmm13, type = 3)
summary(struc_lmm13)
vif(struc_lmm13)
```

```{r}
global <- lmer(flux_mgco2_kgc ~ treatment + ts_sc + wfps_sc + root_density_sc + micro_sc + macro_sc + (1|label), data = temp_cat)
trial <- dredge(global.model = global)
```

```{r}
library(plotly)

plot_ly(temp_cat, x = ~ts, y = ~wfps, z = ~flux_mgco2_kgc, 
        type = "scatter3d", mode = "markers") |> 
  layout(scene = list(
    xaxis = list(title = "Temperature"),
    yaxis = list(title = "WFPS"),
    zaxis = list(title = "CO₂ Flux")
  ))
```

